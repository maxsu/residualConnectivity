cmake_minimum_required(VERSION 3.1)
set(CppFiles arguments.cpp argumentsMPFR.cpp Context.cpp depth_first_search_restricted.hpp bridges.hpp connected_components_restricted.hpp DiscreteGermGrainObs.cpp isSingleComponentWithRadius.cpp obs/withSub.cpp obs/usingBiconnectedComponents.cpp subObs/usingBiconnectedComponents.cpp subObs/subObs.cpp subObsTypes.cpp subObs/basic.cpp subObs/usingCutVertices.cpp obs/basic.cpp obs/usingCutVertices.cpp)
set(HeaderFiles arguments.h argumentsMPFR.h Context.h DiscreteGermGrainObs.h isSingleComponentWithRadius.h lexographicOrder.h includeNumerics.h obs/withSub.h obs/getSubObservation.hpp subObsTypes.h subObs/getObservation.hpp obs/usingBiconnectedComponents.h subObs/usingBiconnectedComponents.h subObs/subObs.h subObs/basic.h subObs/usingCutVertices.h obs/basic.h obs/usingCutVertices.h)
if(WIN32)
	list(APPEND HeaderFiles windowsConsoleOutput.h)
	list(APPEND CppFiles windowsConsoleOutput.cpp)
endif()
if(${Qt5_FOUND})
	list(APPEND CppFiles zoomGraphicsView.cpp)
	list(APPEND HeaderFiles zoomGraphicsView.h)
endif()

add_library(residualConnectivityCommon STATIC ${CppFiles} ${HeaderFiles})
target_include_directories(residualConnectivityCommon PUBLIC ${Boost_INCLUDE_DIRS} ${GRAPHVIZ_INCLUDE_DIR} ${PROJECT_SOURCE_DIR}/residualConnectivityCommon)
target_link_libraries(residualConnectivityCommon INTERFACE ${Boost_LIBRARIES})
if(GRAPHVIZ_FOUND)
	target_link_libraries(residualConnectivityCommon PUBLIC graphviz_gvc graphviz_cgraph graphviz_pathplan)
	set_target_properties(residualConnectivityCommon PROPERTIES COMPILE_DEFINITIONS HAS_GRAPHVIZ)
endif()
target_compile_definitions(residualConnectivityCommon PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)

if(${Qt5_FOUND})
	target_link_libraries(residualConnectivityCommon PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets)
endif()
target_link_libraries(residualConnectivityCommon PUBLIC mpfr)
if(WIN32)
	set_target_properties(residualConnectivityCommon PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/x64/ PDB_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/x64/)
else()
	target_compile_features(residualConnectivityCommon PUBLIC cxx_rvalue_references)
endif()
