cmake_minimum_required(VERSION 3.1)
if(WIN32)
	#It seems adding a non-satsfied dependency like this only works on windows
	add_custom_target(copyText ALL DEPENDS nonExistentFilename)
else()
	add_custom_target(copyText ALL)
endif()
if(BUILD_MATLAB_PACKAGE)
	set(MFILES crudeMC.m conditionalMC.m countConnectedSubgraphsBySize.m recursiveVarianceReduction.m private/getGraph.m)
	#Copy .m files
	if(WIN32)
		foreach(BUILD_TYPE IN LISTS CMAKE_CONFIGURATION_TYPES)
			foreach(MFILE IN LISTS MFILES)
				add_custom_command(TARGET copyText COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/matlabPackage/${MFILE}" "${CMAKE_BINARY_DIR}/matlabPackage/${BUILD_TYPE}/${MFILE}")
			endforeach()
		endforeach()
	else()
		foreach(MFILE IN LISTS MFILES)
			add_custom_command(TARGET copyText COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_SOURCE_DIR}/matlabPackage/${MFILE}" "${CMAKE_BINARY_DIR}/matlabPackage/${MFILE}")
		endforeach()
	endif()
	#Output the runMatlab file
	if(NOT WIN32)
		configure_file(${CMAKE_SOURCE_DIR}/matlabPackage/runMatlab.in ${CMAKE_BINARY_DIR}/matlabPackage/runMatlab @ONLY)
	endif()
endif()

find_package(Rcpp REQUIRED)
set(RFiles R/conditionalMC.R R/countConnectedSubgraphsBySize.R R/crudeMC.R R/stochasticEnumeration.R R/exactCounts-class.R R/exactSpectra-class.R R/exactRCR.R R/onLoad.R R/spectraToRCR.R R/PMC.R R/coerce.R R/createHexagonalLattice.R R/articulationConditioningResampling.R R/monteCarloResult-class.R R/recursiveVarianceReduction.R R/gridCountSpecificSize.R R/gridCountSpecificSize2.R R/optimalStateIndependentImportance.R R/articulationConditioningSplitting.R R/exactProbability.R R/articulationConditioningSplittingResult-class.R R/setDefaultPrec.R R/articulationConditioningSameCountResampling.R R/averageComponentSize.R R/articulationConditioningSameCountImportance.R R/articulationConditioningSameCountImportance2.R)
set(RTestFiles tests/testthat.R tests/testthat/test-gridCounts.R tests/testthat/test-conditionalMC.R tests/testthat/test-crudeMC.R tests/testthat/test-countConnectedSubgraphsBySize.R tests/testthat/test-stochasticEnumeration.R tests/testthat/test-exactRCR.R tests/testthat/test-spectraToRCR.R tests/testthat/test-PMC.R tests/testthat/test-articulationConditioningResampling.R tests/testthat/test-recursiveVarianceReduction.R tests/testthat/test-exactProbability.R tests/testthat/test-articulationConditioningSplitting.R)
set(RPackageFiles DESCRIPTION ${RFiles} ${RTestFiles})
#Find location of Rcpp_exceptions.R 
get_property(RCPP_INCLUDE_DIRECTORIES TARGET Rcpp PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
foreach(RCPP_INCLUDE_DIRECTORY IN LISTS RCPP_INCLUDE_DIRECTORIES)
	if(EXISTS ${RCPP_INCLUDE_DIRECTORY}/Rcpp_exceptions.R)
		set(RCPP_EXCEPTIONS ${RCPP_INCLUDE_DIRECTORY}/Rcpp_exceptions.R)
	endif()
endforeach()

#Copy R package files
if(WIN32)
	foreach(BUILD_TYPE IN LISTS CMAKE_CONFIGURATION_TYPES)
		foreach(PACKAGE_FILE IN LISTS RPackageFiles)
			add_custom_command(TARGET copyText POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy "${CMAKE_SOURCE_DIR}/RPackage/${PACKAGE_FILE}" "${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}/${PACKAGE_FILE}")
		endforeach()
		add_custom_command(TARGET copyText POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy "${RCPP_EXCEPTIONS}" "${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}/R/Rcpp_exceptions.R")
	endforeach()
else()
	foreach(PACKAGE_FILE IN LISTS RPackageFiles)
		add_custom_command(TARGET copyText POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy "${CMAKE_SOURCE_DIR}/RPackage/${PACKAGE_FILE}" "${CMAKE_BINARY_DIR}/RPackage/${PACKAGE_FILE}")
	endforeach()
	add_custom_command(TARGET copyText POST_BUILD COMMAND ${CMAKE_COMMAND} ARGS -E copy "${RCPP_EXCEPTIONS}" "${CMAKE_BINARY_DIR}/RPackage//R/Rcpp_exceptions.R")
endif()
#Run roxygen
if(WIN32)
	if("${CMAKE_GENERATOR}" STREQUAL "NMake Makefiles")
		#Run roxygen2
		add_custom_command(TARGET copyText COMMAND "${R_COMMAND}" ARGS "-e \"library(roxygen2); roxygen2::roxygenise()\"" WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/RPackage")
	else()
		foreach(BUILD_TYPE IN LISTS CMAKE_CONFIGURATION_TYPES)
			if(EXISTS "${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}")
				#Run roxygen2
				add_custom_command(TARGET copyText COMMAND "${R_COMMAND}" ARGS "-e \"library(roxygen2); roxygen2::roxygenise()\"" WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/RPackage/${BUILD_TYPE}")
			endif()
		endforeach()
	endif()
else()
	#Run roxygen2
	add_custom_command(TARGET copyText COMMAND "${R_COMMAND}" ARGS "-e" "\"library(roxygen2);roxygen2::roxygenise()\"" WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/RPackage")
endif()

