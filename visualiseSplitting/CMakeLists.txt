if(${Qt5_FOUND})
	qt5_wrap_cpp(visualiseSplitting_MOC_SOURCES splittingViewer.h)
	add_executable(visualiseSplitting main.cpp splittingViewer.h splittingViewer.cpp ${visualiseSplitting_MOC_SOURCES})
	target_link_libraries(visualiseSplitting PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets residualConnectivityCommon)
	if(WIN32)
		target_link_libraries(visualiseSplitting PUBLIC Qt5::WinMain)
		set_target_properties(visualiseSplitting PROPERTIES LINK_FLAGS "/SUBSYSTEM:windows" RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/x64/ PDB_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/x64/)
	endif()
	target_link_libraries(visualiseSplitting PUBLIC residualConnectivityCommon mpfr)
	target_include_directories(visualiseSplitting PUBLIC ${Boost_INCLUDE_DIRS})
	target_compile_definitions(visualiseSplitting PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK QT_NO_KEYWORDS)
endif()
