project(residualConnectivity)
cmake_minimum_required(VERSION 3.1)
add_library(residualConnectivity SHARED loadQt.cpp loadQt.h register.cpp crudeMC_igraph.cpp crudeMCInterfaces.h)
target_include_directories(residualConnectivity PUBLIC "${residualConnectivity_INCLUDE_DIRS}" "${Boost_INCLUDE_DIRS}")
target_link_libraries(residualConnectivity PUBLIC mpfr)
target_compile_definitions(residualConnectivity PUBLIC BOOST_ALL_NO_LIB BOOST_ALL_DYN_LINK)
if(WIN32)
	target_link_libraries(residualConnectivity PUBLIC "${residualConnectivity_LIBRARY_DIR}/${CMAKE_BUILD_TYPE}/residualConnectivityCommon.lib" "${residualConnectivity_LIBRARY_DIR}/${CMAKE_BUILD_TYPE}/crudeMCLib.lib" mpir)
else()
	target_link_libraries(residualConnectivity PUBLIC "${residualConnectivity_LIBRARIES}")
	target_compile_features(residualConnectivity PUBLIC cxx_rvalue_references)
endif()
target_link_libraries(residualConnectivity PUBLIC ${Boost_LIBRARIES} Rcpp)

if(Qt5_FOUND)
	target_link_libraries(residualConnectivity PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets ${GRAPHVIZ_LIBRARY})
	if(WIN32)
		get_target_property(QtCore_location Qt5::Core LOCATION)
		install(FILES ${QtCore_location} DESTINATION . COMPONENT Runtime)

		GET_FILENAME_COMPONENT(QtBinaryPath ${QtCore_location} PATH)
		if(EXISTS ${QtBinaryPath}/icuin51.dll)
			install(FILES ${QtBinaryPath}/icuin51.dll DESTINATION . COMPONENT Runtime)
			install(FILES ${QtBinaryPath}/icuuc51.dll DESTINATION . COMPONENT Runtime)
			install(FILES ${QtBinaryPath}/icudt51.dll DESTINATION . COMPONENT Runtime)
		endif()

		get_target_property(QtWidgets_location Qt5::Widgets LOCATION)
		install(FILES ${QtWidgets_location} DESTINATION . COMPONENT Runtime)

		get_target_property(QtGuiEgl_location Qt5::Gui_EGL LOCATION)
		install(FILES ${QtGuiEgl_location} DESTINATION . COMPONENT Runtime)

		get_target_property(QtGuiGlesV2_location Qt5::Gui_GLESv2 LOCATION)
		install(FILES ${QtGuiGlesV2_location} DESTINATION . COMPONENT Runtime)

		get_target_property(QtGui_location Qt5::Gui LOCATION)
		install(FILES ${QtGui_location} DESTINATION . COMPONENT Runtime)
		target_link_libraries(residualConnectivity PRIVATE "${PROJECT_BINARY_DIR}/../R.lib")

		get_filename_component(QT_LIB_DIR ${QtGui_location} DIRECTORY)
		if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
			install(FILES ${QT_LIB_DIR}/../plugins/platforms/qwindowsd.dll DESTINATION ../inst/libs/x64/platforms COMPONENT Runtime)
		else()
			install(FILES ${QT_LIB_DIR}/../plugins/platforms/qwindows.dll DESTINATION ../inst/libs/x64/platforms COMPONENT Runtime)
		endif()
		
		#Find the mpfr.dll
		if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
			get_target_property(MPFR_LOCATION mpfr IMPORTED_LOCATION_DEBUG)
			get_target_property(MPIR_LOCATION mpir IMPORTED_LOCATION_DEBUG)
		else()
			get_target_property(MPFR_LOCATION mpfr IMPORTED_LOCATION_RELEASE)
			get_target_property(MPIR_LOCATION mpir IMPORTED_LOCATION_RELEASE)
		endif()
		install(FILES ${MPFR_LOCATION} DESTINATION .)
		install(FILES ${MPIR_LOCATION} DESTINATION .)
	endif()
endif()

install(TARGETS residualConnectivity RUNTIME DESTINATION . LIBRARY DESTINATION . COMPONENT Runtime)