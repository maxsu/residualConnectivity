project(residualConnectivity)
cmake_minimum_required(VERSION 3.1)
add_library(residualConnectivityRPackage SHARED loadQt.cpp loadQt.h register.cpp crudeMC_igraph.cpp crudeMCInterfaces.h igraphInterface.h igraphInterface.cpp graphNELInterface.h graphNELInterface.cpp crudeMC_graphNEL.cpp crudeMC_graphAM.cpp graphAMInterface.h graphAMInterface.cpp)
target_link_libraries(residualConnectivityRPackage PUBLIC residualConnectivityCommon Rcpp crudeMCLib conditionalMCLib)

if(BUILD_VISUALISATION)
	target_link_libraries(residualConnectivityRPackage PUBLIC Qt5::Core Qt5::Gui Qt5::Widgets ${IGRAPH_LIBRARIES})
	if(WIN32)
		target_compile_definitions(residualConnectivityRPackage PUBLIC _CRT_SECURE_NO_WARNINGS)
		get_target_property(QtCore_location Qt5::Core LOCATION)
		install(FILES ${QtCore_location} DESTINATION . COMPONENT Runtime)

		GET_FILENAME_COMPONENT(QtBinaryPath ${QtCore_location} PATH)
		if(EXISTS ${QtBinaryPath}/icuin51.dll)
			install(FILES ${QtBinaryPath}/icuin51.dll DESTINATION . COMPONENT Runtime)
			install(FILES ${QtBinaryPath}/icuuc51.dll DESTINATION . COMPONENT Runtime)
			install(FILES ${QtBinaryPath}/icudt51.dll DESTINATION . COMPONENT Runtime)
		endif()

		get_target_property(QtWidgets_location Qt5::Widgets LOCATION)
		install(FILES ${QtWidgets_location} DESTINATION . COMPONENT Runtime)

		get_target_property(QtGuiEgl_location Qt5::Gui_EGL LOCATION)
		install(FILES ${QtGuiEgl_location} DESTINATION . COMPONENT Runtime)

		get_target_property(QtGuiGlesV2_location Qt5::Gui_GLESv2 LOCATION)
		install(FILES ${QtGuiGlesV2_location} DESTINATION . COMPONENT Runtime)

		get_target_property(QtGui_location Qt5::Gui LOCATION)
		install(FILES ${QtGui_location} DESTINATION . COMPONENT Runtime)
		target_link_libraries(residualConnectivityRPackage PRIVATE "${PROJECT_BINARY_DIR}/../R.lib")

		get_filename_component(QT_LIB_DIR ${QtGui_location} DIRECTORY)
		if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
			install(FILES ${QT_LIB_DIR}/../plugins/platforms/qwindowsd.dll DESTINATION ../inst/libs/x64/platforms COMPONENT Runtime)
		else()
			install(FILES ${QT_LIB_DIR}/../plugins/platforms/qwindows.dll DESTINATION ../inst/libs/x64/platforms COMPONENT Runtime)
		endif()
		
		#Find the mpfr.dll
		if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
			get_target_property(MPFR_LOCATION mpfr IMPORTED_LOCATION_DEBUG)
			get_target_property(MPIR_LOCATION mpir IMPORTED_LOCATION_DEBUG)
		else()
			get_target_property(MPFR_LOCATION mpfr IMPORTED_LOCATION_RELEASE)
			get_target_property(MPIR_LOCATION mpir IMPORTED_LOCATION_RELEASE)
		endif()
		install(FILES ${MPFR_LOCATION} DESTINATION .)
		install(FILES ${MPIR_LOCATION} DESTINATION .)
	endif()
endif()
add_custom_command(TARGET residualConnectivityRPackage POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy "${CMAKE_BINARY_DIR}/RPackage/src/residualConnectivity/libresidualConnectivityRPackage.so" "${CMAKE_BINARY_DIR}/RPackage/src/residualConnectivity.so")
